TP Final - Clean Code

1. Répartition du travail

Farah : création des classes FinalTest, Products, TaxCalculation, TaxSystem et les tests ;

Kathleen : création des classes Receipt, ReceiptGenerator et ReceiptDisplayer ;

Ensemble : vérification du projet, de son fonctionnement, cohérence du code.

2. Concepts vu en cours :

    a. Clean Code
 - Code facile à lire ;
 - Noms de variables, fonctions sont explicites ;
 - Chaque fonction fait une seule chose (décrite par le nom de celle-ci) ;
 - Chqaue fonction a deux paramètres maximum ;
 - Pas de code inutilisé ;
 - Pas de code répété.

    b. Functional Programming Style
 - Pas de Functional Programing Style sinon il apparaîtrait sous forme de stream au lieu des boucles for
   présentes dans le code (qui ne devraient pas y être),

    c. TDD


    d. Design Pattern
- Builder Pattern pour la classe 'Products' pour la création d'objets étape par étape,
- Strategy Pattern pour la classe 'TaxSystem' en pour calculer les taxes pour chaque produit avec le système de tax qui
  lui correspond, en fonction de la catégorie et du statut d'import.

3. Perspectives d'amélioration :

- Il reste encore des boucles 'for' et 'while' dans le code, l'idéal aurait été de faire sans,
- Il aurait fallu créer une interface pour que le 'getTaxAmount' fonctionne correctement, puisqu'actuellement, le code affiche
  les taxes mais ne les ajoutent pas...